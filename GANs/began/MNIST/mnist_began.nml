oracle("mode") = BEGAN

gamma = 0.5

source:
    bind = "/DM-Dash/NeoPulse_Examples/GANs/began/MNIST/training_data.csv";
    input:
        x ~ from "image"
            -> image: [shape = [28, 28], channels = 1]
            -> ImageDataGenerator: [],
        z ~ from "noise"
            -> flat: [64]
            -> FlatDataGenerator: [];
    params:
        batch_size = 128,
        shuffle = True,
        shuffle_init = True;

architecture name:generator:
    input:
        z ~ flat: [64];
    output:
        g ~ image: [shape = [28, 28], channels = 1];

    z -> Dense: [6272]
      -> Activation:['elu']
      -> Reshape: [[7,7,128]]
      -> Conv2D: [128, kernel_size = 3, padding = "same"]
      -> Activation: ['elu']
      -> Conv2D: [128, kernel_size = 3, padding = "same"]
      -> Activation: ['elu']
      -> UpSampling2D: [[2,2]]
      -> Conv2D: [128, kernel_size = 3, padding = "same"]
      -> Activation: ['elu']
      -> Conv2D: [128, kernel_size = 3, padding = "same"]
      -> Activation: ['elu']
      -> UpSampling2D: [[2,2]]
      -> Conv2D: [128, kernel_size = 3, padding = "same"]
      -> Activation: ['elu']
      -> Conv2D: [128, kernel_size = 3, padding = "same"]
      -> Activation: ['elu']
      -> Conv2D: [1, kernel_size = 3, padding = "same"]
      -> Activation: ['elu']
      -> g;

architecture name: discriminator:
    input:
        img ~ image: [shape = [28, 28], channels = 1];
    output:
        d ~ image: [shape = [28, 28], channels = 1];

    img -> Conv2D: [1, kernel_size = 3, padding = "same"]
        -> Activation: ['elu']
        -> Conv2D: [128, kernel_size = 3, padding = "same"]
        -> Activation: ['elu']
        -> Conv2D: [128, kernel_size = 3, strides = 2, padding = "same"]
        -> Activation: ['elu']
        -> Conv2D: [256, kernel_size = 3, padding = "same"]
        -> Activation: ['elu']
        -> Conv2D: [256, kernel_size = 3, strides = 2, padding = "same"]
        -> Activation: ['elu']
        -> Conv2D: [384, kernel_size = 3, padding = "same"]
        -> Activation: ['elu']
        -> Conv2D: [384, kernel_size = 3, padding = "same"]
        -> Activation: ['elu']
        -> Flatten: []
        -> Dense: [128]
        -> Dense: [6272]
        -> Activation: ['elu']
        -> Reshape: [[7,7,128]]
        -> Conv2D: [128, kernel_size = 3, padding = "same"]
        -> Activation: ['elu']
        -> Conv2D: [128, kernel_size = 3, padding = "same"]
        -> Activation: ['elu']
        -> UpSampling2D: [[2,2]]
        -> Conv2D: [128, kernel_size = 3, padding = "same"]
        -> Activation: ['elu']
        -> Conv2D: [128, kernel_size = 3, padding = "same"]
        -> Activation: ['elu']
        -> UpSampling2D: [[2,2]]
        -> Conv2D: [128, kernel_size = 3, padding = "same"]
        -> Activation: ['elu']
        -> Conv2D: [128, kernel_size = 3, padding = "same"]
        -> Activation: ['elu']
        -> Conv2D: [1, kernel_size = 3, padding = "same"]
        -> Activation: ['elu']
        -> d;

train :
    compile:
        optimizer = Adam: [0.00005],
        loss = l1loss;
    run:
        nb_epoch = 2;
    dashboard: ;
        
